name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (v0.0.0 format)'
        required: true
        default: 'v0.0.0'

env:
    APP_NAME: laba1
    
permissions:
    contents: write

jobs:
  create_tag:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
        
    steps:
      - name: Check version format
        run: |
          if [[ ! "${{ github.event.inputs.version }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version must be in the format vX.Y.Z (e.g., v1.2.3)"
            exit 1
          fi
    
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git user
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Create and push tag
        run: |
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}

  release:
    runs-on: ubuntu-latest
    needs: create_tag
    if: ${{ !failure() && !cancelled()}}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
              
      - name: Archive
        run: |
          find . -name "*.py" > filelist.txt
          tar -czf ${{ env.APP_NAME }}${{ github.event.inputs.version || github.ref_name }}.tar.gz -T ./filelist.txt
          zip -@ ${{ env.APP_NAME }}${{ github.event.inputs.version || github.ref_name }}.zip < ./filelist.txt
            
      - name: Generate release notes
        id: release_notes
        run: |
          TAG=$(git describe --tags --abbrev=0)
          PREV_TAG=$(git describe --tags --abbrev=0 "$TAG"^ || echo "")
          echo "Релиз включает следующие коммиты: " > release_notes.md
          if [ -z "$PREV_TAG" ]; then
            git log --pretty=format:"- %h %s" "$TAG" >> release_notes.md
          else
            git log --pretty=format:"- %h %s" "$PREV_TAG".."$TAG" >> release_notes.md
          fi

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version || github.ref_name }}
          name: Release ${{ github.event.inputs.version || github.ref_name }}
          body_path: release_notes.md
          files: |
            ${{ env.APP_NAME }}${{ github.event.inputs.version || github.ref_name }}.tar.gz
            ${{ env.APP_NAME }}${{ github.event.inputs.version || github.ref_name }}.zip
